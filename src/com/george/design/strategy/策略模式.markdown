## 定义：
* Define a family of algorithms,encapsulate[简述，概括] each one,
and make them interchangeable[可交换的]. Strategy lets the algorithm vary 
independently from clients that use it.

1. 策略的定义

        策略类的定义比较简单，包含一个策略接口和一组实现这个接口得策略类。因为所有的策略类都实现相同的接口，所以客户端代码基于接口而非实现变成
2. 策略的创建

        因为策略模式会包含一组策略，在使用他们得时候一般会通过类型（type）来判断穿件哪个策略。
        * 针对无状态的,纯粹算法实现的，可以把type创建策略的逻辑抽离出来，放到工厂类中，事先创建好每个对象，缓存到工厂类中。
        * 针对有状态的，需要根据状态重新创建
 
3. 策略的使用

        客户端一般在运行时动态确定使用哪种策略，这也是策略模式典型的应用场景
        
        这里的"运行时动态"指的是，我们事先不知道使用哪种策略，而是在程序运行期间，
        根据配置、用户输入、计算结果等这些不确定因素，动态决定使用哪种策略
     
 
````
 策略模式用来解耦策略的定义、创建、使用。一个完整的策略模式就是由这三个部分组成的

    一、策略类的定义比较简单，包含一个策略接口和一组实现这个接口得策略类
    二、策略的创建由工厂类来完成，封装策略创建的细节
    三、策略模式包含一组策略，客户端如何选择使用哪个策略，有两种确定方法：
        编译时静态确定和运行时动态确定。其中运行时动态确定才是策略模式的典型应用场景
````  
   
 
